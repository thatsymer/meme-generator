{"ast":null,"code":"var _jsxFileName = \"E:\\\\Desktop\\\\Web Developer\\\\todo-app\\\\src\\\\MemeGenerator.js\";\nimport React, { Component } from \"react\";\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass MemeGenerator extends Component {\n  constructor() {\n    super();\n    this.state = {\n      topText: \"\",\n      bottomText: \"\",\n      randomImg: \"http://i.imgflip.com/1bij.jpg\",\n      allMemeImgs: []\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://api.imgflip.com/get_memes\").then(response => response.json()).then(response => {\n      const {\n        memes\n      } = response.data;\n      this.setState({\n        allMemeImgs: memes\n      });\n    });\n  }\n\n  handleChange() {\n    console.log(\"works\");\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"meme-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"topText\",\n          value: this.state.topText,\n          placeholder: \"Top Text\",\n          onChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"topText\",\n          value: this.state.bottomText,\n          placeholder: \"Bottom Text\",\n          onChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default MemeGenerator;","map":{"version":3,"sources":["E:/Desktop/Web Developer/todo-app/src/MemeGenerator.js"],"names":["React","Component","MemeGenerator","constructor","state","topText","bottomText","randomImg","allMemeImgs","componentDidMount","fetch","then","response","json","memes","data","setState","handleChange","console","log","render"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAO,WAAP;;;AAEA,MAAMC,aAAN,SAA4BD,SAA5B,CAAsC;AAClCE,EAAAA,WAAW,GAAG;AACV;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,OAAO,EAAE,EADA;AAETC,MAAAA,UAAU,EAAE,EAFH;AAGTC,MAAAA,SAAS,EAAE,+BAHF;AAITC,MAAAA,WAAW,EAAE;AAJJ,KAAb;AAMH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,KAAK,CAAC,mCAAD,CAAL,CACKC,IADL,CACUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADtB,EAEKF,IAFL,CAEUC,QAAQ,IAAI;AACd,YAAM;AAACE,QAAAA;AAAD,UAAUF,QAAQ,CAACG,IAAzB;AACA,WAAKC,QAAL,CAAc;AAAER,QAAAA,WAAW,EAAEM;AAAf,OAAd;AACH,KALL;AAMH;;AAGDG,EAAAA,YAAY,GAAE;AACNC,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACP;;AAEDC,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA,6BACI;AAAM,QAAA,SAAS,EAAC,WAAhB;AAAA,gCACI;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,IAAI,EAAC,SAAxB;AAAkC,UAAA,KAAK,EAAE,KAAKhB,KAAL,CAAWC,OAApD;AAA6D,UAAA,WAAW,EAAC,UAAzE;AAAoF,UAAA,QAAQ,EAAE,KAAKY;AAAnG;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,IAAI,EAAC,SAAxB;AAAkC,UAAA,KAAK,EAAE,KAAKb,KAAL,CAAWE,UAApD;AAAgE,UAAA,WAAW,EAAC,aAA5E;AAA0F,UAAA,QAAQ,EAAE,KAAKW;AAAzG;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAQH;;AAlCiC;;AAqCtC,eAAef,aAAf","sourcesContent":["import React, {Component} from \"react\"\r\nimport './App.css'\r\n\r\nclass MemeGenerator extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            topText: \"\",\r\n            bottomText: \"\",\r\n            randomImg: \"http://i.imgflip.com/1bij.jpg\",\r\n            allMemeImgs: []\r\n        }\r\n    }\r\n    \r\n    componentDidMount() {\r\n        fetch(\"https://api.imgflip.com/get_memes\")\r\n            .then(response => response.json())\r\n            .then(response => {\r\n                const {memes} = response.data\r\n                this.setState({ allMemeImgs: memes })\r\n            })\r\n    }\r\n    \r\n\r\n    handleChange(){\r\n            console.log(\"works\")\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <form className=\"meme-form\">\r\n                    <input type=\"text\" name=\"topText\" value={this.state.topText} placeholder=\"Top Text\" onChange={this.handleChange} />\r\n                    <input type=\"text\" name=\"topText\" value={this.state.bottomText} placeholder=\"Bottom Text\" onChange={this.handleChange} />\r\n                </form> \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MemeGenerator"]},"metadata":{},"sourceType":"module"}